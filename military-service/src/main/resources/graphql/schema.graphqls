enum SortDirection {
    ASC
    DESC
}

input SortInput {
    field: String!
    direction: SortDirection!
}

enum Operator {
    LT
    LE
    GT
    GE
    EQ
    STARTS_WITH
    ENDS_WITH
    CONTAINS
}

input FilterInput {
    operator: Operator!
    value: String!
}

input PaginationInput {
    page: Int!
    pageSize: Int!
}

input MilitarySort {
    sorts: [SortInput!]!
}

input MilitaryFilter {
    name: [FilterInput!]
    rank: [FilterInput!]
}

type RankCategory @key(fields: "name") {
    name: String!
}

type Rank @key(fields: "name") {
    name: String!
    level: Int!
    category: RankCategory!
}

type Specialty @key(fields: "code"){
    code: String!
    name: String!
}

type MilitaryAttributeDefinition {
    name: String!
    description: String
    rank: Rank!
}

type MilitaryAttribute {
    definition: MilitaryAttributeDefinition!
    value: String
}

type Military @key(fields: "mbn") {
    mbn: String!
    firstName: String!
    lastName: String!
    middleName: String
    birthDate: Date!
    avatarUrl: String
    rank: Rank
    specialties: [Specialty!]!
    attributes: [MilitaryAttribute!]!
}

type Query {
    militaryByMbn(mbn: String!): Military
    militaries(filterInput: MilitaryFilter, sortInput: MilitarySort, paginationInput: PaginationInput): [Military!]!

    militaryAttributeDefinitions: [MilitaryAttributeDefinition!]!
    militaryAttributeDefinitionsByRank(rank: String!): [MilitaryAttributeDefinition!]!

    ranks: [Rank!]!
    ranksByCategory(category: String!): [Rank!]!

    rankCategories: [RankCategory!]!

    specialties: [Specialty!]!
}

input MilitaryAttributeInput {
    name: String!
    rankName: String!
    value: String!
}

input CreateMilitaryInput {
    mbn: String!
    firstName: String!
    lastName: String!
    middleName: String
    birthDate: Date!
    avatarUrl: String
    rankName: String
    unitNumber: String
    attributes: [MilitaryAttributeInput!]
}

input UpdateMilitaryInput {
    firstName: String
    lastName: String
    middleName: String
    birthDate: Date
    avatarUrl: String
    rankName: String
    unitNumber: String
    attributes: [MilitaryAttributeInput!]
}

type Mutation {
    createMilitary(militaryInput: CreateMilitaryInput!): Military
    updateMilitary(mbn: String!, militaryInput: UpdateMilitaryInput!): Military
    deleteMilitary(mbn: String!): Boolean
}

scalar Date